- hosts: localhost
  connection: local
  sudo: True
  vars:
    plugins_path: "/etc/amonagent/plugins/postgres"
    enabled_plugins: "/etc/amonagent/plugins-enabled"
    name: "postgres"
    password: "{{ lookup('password', '/tmp/passwordfile chars=ascii_letters') }}"
  vars_prompt:
  - name: "database"
    prompt: "Please select the PostgreSQL database you wish to monitor"
    private: no
  tasks:
    - 
      name: install Postgres Dependencies
      yum: pkg={{item}} state=installed
      with_items:
        - libpq-dev
        - python-devel
        - python-psycopg2
        - postgresql-contrib
      when: ansible_os_family == "RedHat"

    - name: install Postgres Dependencies
      apt: pkg={{item}} state=installed update_cache=yes
      with_items:
        - libpq-dev
        - python-dev
        - python-psycopg2
        - postgresql-contrib
      when: ansible_os_family == "Debian"

    - 
      template: src={{ plugins_path }}/{{ name }}.conf.example dest={{ enabled_plugins }}/{{ name }}.conf
    - 
      service: name=postgresql state=started
    - 
      name: Add Amon user 
      sudo: True
      sudo_user: postgres 
      postgresql_user: name=amon db={{database}} password={{password}} priv=CONNECT
    - 
      name: Test the config file
      command: cat {{ enabled_plugins }}/{{ name }}.conf
    - 
       name: Grant SELECT privilegies
       sudo: True
       sudo_user: postgres
       postgresql_privs:
         database={{ database }}
         state=present
         objs=ALL_IN_SCHEMA
         privs=SELECT
         type=table
         roles=amon
         grant_option=yes

    - name: Ensure postgresql pg_stat_statements extension is created
      sudo: True
      sudo_user: postgres
      shell: "psql {{database}} -c 'CREATE EXTENSION pg_stat_statements;'"
      register: psql_result
      failed_when: >
        psql_result.rc != 0 and ("already exists" not in psql_result.stderr)
      changed_when: "psql_result.rc == 0"